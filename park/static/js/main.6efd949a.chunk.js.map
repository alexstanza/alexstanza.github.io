{"version":3,"sources":["components/PlacesAutocomplete.jsx","components/DistanceMatrixWrapper.jsx","components/ParkingPeriod.jsx","components/ParkingTimeOffset.jsx","components/ParkingListItem.jsx","components/ParkingList.jsx","lib/CarparkAvailability.jsx","lib/NearestFirebase.jsx","App.js","reportWebVitals.js","index.js"],"names":["PlacesAutocomplete","props","_usePlacesAutocomplet","usePlacesAutocomplete","requestOptions","componentRestrictions","country","debounce","ready","value","_usePlacesAutocomplet2","suggestions","status","data","setValue","clearSuggestions","ref","useOnclickOutside","handleSelect","suggestion","fullAddress","description","placeName","structured_formatting","main_text","address","secondary_text","getGeocode","then","results","getLatLng","_ref","lat","lng","onSelectDestination","destinationAddr","destinationLat","destinationLng","catch","error","console","log","react_default","a","createElement","InputGroup","className","Form","Control","type","placeholder","aria-label","aria-describedby","onChange","e","target","disabled","map","place_id","_suggestion$structure","key","onClick","DistanceMatrixWrapper","_this","this","inputs","calculateDistance","position","destAdr","offsetOverride","origLat","coords","latitude","origLng","longitude","destLat","destLng","esm","options","destinations","origins","travelMode","callback","res","distance","rows","elements","onChangeDMDistance","duration","offset","Math","ceil","onChangeDMOffset","Component","ParkingPeriod","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickPeriod","btnIndex","parkingPeriod","i","buttons","length","onChangeParkingPeriod","_this2","Button","ParkingTimeOffset","refreshOffsets","dateTimeNow","Date","now","offsets","forEach","offsetDateTime","timeDescription","getHours","toString","padStart","getMinutes","style","width","onChangeOffset","ParkingListItem","onClickDestination","googleMapUrl","carparkData","window","open","renderParkingFee","estimate","parkingForbidden","parkingFee","toFixed","renderAvailability","availability","undefined","lots_available","carpark","carparkAvailability","fee_structure","variant","borderRadius","name","walkingMinutes","ParkingList","shortlists","components_ParkingListItem","CarparkAvailability","fetchAvailabilityData","fetch","method","headers","content-type","response","json","items","carpark_data","refreshDateTime","timestamp","dataLoad","dataError","populateAvailability","shortlist","carparkNo","car_park_no","availabilityCarparkNo","carpark_number","carpark_info","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","functions","getFunctions","getNearestCarparks","httpsCallable","App","state","originLat","originLng","destinationSearchRadius","timeToDestination","componentDidMount","showLoading","navigator","geolocation","getCurrentPosition","onPositionSuccess","onPositionError","enableHighAccuracy","timeout","maximumAge","setState","refreshCarparkShortlist","oLat","oLng","dLat","dLng","timeToDest","parkPeriod","destRadius","result","isLoading","display","document","getElementById","destinationData","event","id","components_PlacesAutocomplete","components_DistanceMatrixWrapper","components_ParkingTimeOffset","components_ParkingPeriod","components_ParkingList","React","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.6efd949a.chunk.js","sourcesContent":["import React from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport { InputGroup, Form } from \"react-bootstrap\";\n\nconst PlacesAutocomplete = (props) => {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n      componentRestrictions: { country: 'sg', },\n    },\n    debounce: 300,\n  });\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  const handleSelect = (suggestion) =>\n    () => {\n      // When user selects a place, we can replace the keyword without request data from API\n      // by setting the second parameter to \"false\"\n      const fullAddress = suggestion.description;\n      const placeName = suggestion.structured_formatting.main_text;\n      const address = suggestion.structured_formatting.secondary_text;\n      setValue(placeName + \", \" + address, false);\n      clearSuggestions();\n\n      // Get latitude and longitude via utility functions\n      getGeocode({ address: fullAddress })\n        .then((results) => getLatLng(results[0]))\n        .then(({ lat, lng }) => {\n          //console.log(\"Coordinates: \", { lat, lng });\n          props.onSelectDestination({ destinationAddr: address, destinationLat: lat, destinationLng: lng });\n        })\n        .catch((error) => {\n          console.log(\"Error: \", error);\n        });\n    };\n\n  const renderSuggestions = () =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <li className=\"dropdown-item\" key={place_id} onClick={handleSelect(suggestion)}>\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div ref={ref}>\n      <InputGroup className=\"mb-1\">\n        <Form.Control\n          type=\"search\"\n          className=\"fs-5\"\n          placeholder=\"Destination\"\n          aria-label=\"Destination\"\n          aria-describedby=\"basic-addon2\"\n          onChange={handleInput}\n          disabled={!ready}\n          value={value} />\n      </InputGroup>\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n      {status === \"OK\" && <div className=\"dropdown\"><ul className=\"dropdown-menu d-block fs-5\">{renderSuggestions()}</ul></div>}\n    </div>\n  );\n};\n\nexport default PlacesAutocomplete;\n\n","import React, { Component } from 'react';\nimport { DistanceMatrixService } from '@react-google-maps/api';\n\nclass DistanceMatrixWrapper extends Component {\n  render() {\n    if (this.props.inputs.calculateDistance === false) {\n      //console.log(\"DO NOT DO!\");\n      return;\n    } else {\n      //console.log(\"LET'S GO!\");\n    }\n    const travelMode = 'DRIVING';\n    const position = this.props.inputs.position;\n    const destAdr = this.props.inputs.destinationAddr;\n    const offsetOverride = this.props.inputs.offsetOverride;\n    const calculateDistance = this.props.inputs.calculateDistance;\n    const origLat = (this.props.inputs.position !== null) ? this.props.inputs.position.coords.latitude : 1.2857166;\n    const origLng = (this.props.inputs.position !== null) ? this.props.inputs.position.coords.longitude : 103.8235629;\n    const destLat = this.props.inputs.destinationLat;\n    const destLng = this.props.inputs.destinationLng;\n    return (\n      <DistanceMatrixService\n        options={{\n          destinations: [{ lat: origLat, lng: origLng }],\n          origins: [{ lat: destLat, lng: destLng }],\n          travelMode: travelMode,\n        }}\n        callback={(res) => {\n          if (position !== null) {\n            let distance = res.rows[0].elements[0];\n            this.props.onChangeDMDistance(distance);\n            if (destAdr !== \"\" && offsetOverride === false) {\n              let duration = distance.duration.value / 60;\n              let offset = Math.ceil(duration / 5) * 5;\n              this.props.onChangeDMOffset(offset);\n            }\n          } else {\n            if (calculateDistance) {\n              const offset = 0;\n              this.props.onChangeDMOffset(offset);\n            }\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default DistanceMatrixWrapper;","import React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\n\nclass ParkingPeriod extends Component {\n\n  constructor() {\n    super();\n    this.buttons = [\n      'btn-warning',\n      'btn-secondary',\n      'btn-secondary',\n      'btn-secondary',\n      'btn-secondary'\n    ]\n  }\n\n  onClickPeriod = (btnIndex, parkingPeriod) => {\n    for (let i = 0; i < this.buttons.length; ++i) {\n      if (i === btnIndex) {\n        this.buttons[i] = 'btn-warning';\n      } else {\n        this.buttons[i] = 'btn-secondary';\n      }\n    }\n    this.props.onChangeParkingPeriod(parkingPeriod);\n  }\n\n  render() {\n    if(this.props.destinationAddr === \"\") return;\n    return (\n      <div className=\"input-group pt-1 pb-2\">\n        <Button className={\"btn fs-5 btn-secondary\"}>for</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[0]} onClick={() => this.onClickPeriod(0, 0.5)}>30min</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[1]} onClick={() => this.onClickPeriod(1, 1)}>1hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[2]} onClick={() => this.onClickPeriod(2, 2)}>2hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[3]} onClick={() => this.onClickPeriod(3, 3)}>3hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[4]} onClick={() => this.onClickPeriod(4, 6)}>6hr</Button>\n      </div>\n    );\n  }\n}\n\nexport default ParkingPeriod;","import React, { Component } from 'react';\n\nclass ParkingTimeOffset extends Component {\n\n  constructor() {\n    super();\n    this.offsets = [\n      { value: 0, description: 'parking start now, at ' },\n      { value: 5, description: 'parking start in +5min, at ' },\n      { value: 10, description: 'parking start in +10min, at ' },\n      { value: 15, description: 'parking start in +15min, at ' },\n      { value: 20, description: 'parking start in +20min, at ' },\n      { value: 25, description: 'parking start in +25min, at ' },\n      { value: 30, description: 'parking start in +30min, at ' },\n      { value: 35, description: 'parking start in +35min, at ' },\n      { value: 40, description: 'parking start in +40min, at ' },\n      { value: 45, description: 'parking start in +45min, at ' }\n    ];\n  }\n\n  refreshOffsets = () => {\n    const dateTimeNow = Date.now();\n    this.offsets.forEach(offset => {\n      const offsetDateTime = new Date(dateTimeNow + offset.value * 60 * 1000);\n      const offsetHours = offsetDateTime.getHours().toString().padStart(2, '0');\n      const offsetMinutes = offsetDateTime.getMinutes().toString().padStart(2, '0');\n      const timeDescription = offsetHours + \":\" + offsetMinutes;\n      offset.timeDescription = timeDescription;\n    });\n  }\n\n  render() {\n    if(this.props.destinationAddr === \"\") return;\n    this.refreshOffsets();\n    return (\n      <div className=\"col-xs-2\">\n        <select className=\"form-select fs-5 bg-warning\" style={{ width: \"347px\" }} value={this.props.offset} onChange={this.props.onChangeOffset}>\n          {this.offsets.map(offset => (\n            <option key={offset.value} value={offset.value}>{offset.description}{offset.timeDescription}</option>))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default ParkingTimeOffset;","import React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\n\nclass ParkingListItem extends Component {\n\n  onClickDestination = () => {\n    const googleMapUrl = this.props.carparkData.googleMapUrl;\n    window.open(googleMapUrl, '_blank');\n  }\n\n  renderParkingFee = (estimate) => {\n    if (estimate.parkingForbidden === true) {\n      return <div className=\"badge bg-danger\">CLOSED</div>;\n    } else {\n      if (estimate.parkingFee === 0) {\n        return <div className=\"badge bg-primary\">FREE</div>;\n      } else {\n        return <div className=\"badge bg-primary\">S${estimate.parkingFee.toFixed(2)}</div>;\n      }\n    }\n  }\n\n  renderAvailability = (availability) => {\n    if (availability === undefined) return;\n    const lots_available = availability[0].lots_available;\n    if (lots_available !== \"0\") {\n      return <div className=\"badge bg-primary\">{lots_available} lots</div>;\n    } else {\n      return <div className=\"badge bg-danger\">{lots_available} lots</div>;\n    }\n  }\n\n  render() {\n    if (this.props.carparkData === null) return;\n    const availability = this.props.carparkData.carpark.carparkAvailability;\n    const estimate = {\n      parkingFee: this.props.carparkData.fee_structure.parkingFee,\n      parkingForbidden: this.props.carparkData.fee_structure.parkingForbidden\n    };\n    return (\n      <Button\n        onClick={this.onClickDestination}\n        variant=\"light\"\n        className=\"list-group-item list-group-item-action align-items-start d-flex p-3\"\n        style={{ borderRadius: 0 }}>\n\n        <div className=\"col-9\">\n          <div className=\"fw-bold fs-6\">{this.props.carparkData.carpark.name}</div>\n          <div className=\"fs-6\">{this.props.carparkData.carpark.address}</div>\n        </div>\n        <div className=\"col-3 text-end\">\n          {this.renderParkingFee(estimate)}\n          {this.renderAvailability(availability)}\n          <div className=\"badge bg-secondary\">{this.props.carparkData.walkingMinutes} min walk</div>\n        </div>\n\n      </Button>\n    );\n  }\n}\n\nexport default ParkingListItem;\n\n","import React, { Component } from 'react';\nimport ParkingListItem from './ParkingListItem';\n\nclass ParkingList extends Component {\n  render() {\n    if (this.props.shortlists.length < 1) return;\n    return (\n      <div className=\"container-lg px-0 pb-2\">\n        <div className=\"list-group list-group-flush fs-5\">\n          <ParkingListItem carparkData={(this.props.shortlists.length > 0) ? this.props.shortlists[0] : null} />\n          <ParkingListItem carparkData={(this.props.shortlists.length > 1) ? this.props.shortlists[1] : null} />\n          <ParkingListItem carparkData={(this.props.shortlists.length > 2) ? this.props.shortlists[2] : null} />\n          <ParkingListItem carparkData={(this.props.shortlists.length > 3) ? this.props.shortlists[3] : null} />\n          <ParkingListItem carparkData={(this.props.shortlists.length > 4) ? this.props.shortlists[4] : null} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ParkingList;","export class CarparkAvailability {\n  constructor(callback) {\n    this.data = null;\n    this.refreshDateTime = null;\n    this.dataError = null;\n    this.dataLoad = false;\n    this.callback = callback;\n\n    this.fetchAvailabilityData();\n  }\n\n  fetchAvailabilityData = () => {\n    const url = 'https://www.koleksikatik.com/data/d.json';\n    const method = 'GET';\n    const headers = { 'content-type': 'application/json' };\n\n    fetch(url, { method: method, headers })\n      .then(response => { return response.json() })\n      .then((data) => {\n        this.data = data.items[0].carpark_data;\n        this.refreshDateTime = data.items[0].timestamp;\n        this.dataLoad = true;\n        this.callback();\n      }).catch((error) => {\n        this.dataError = error;\n        this.dataLoad = true;\n        this.callback();\n      });\n  }\n\n  populateAvailability = (shortlists) => {\n    if (this.data === undefined || this.data === null) return;\n    shortlists.forEach(shortlist => {\n      const carparkNo = shortlist.carpark.car_park_no;\n      this.data.forEach(availability => {\n        const availabilityCarparkNo = availability.carpark_number;\n        if (carparkNo === availabilityCarparkNo) {\n          shortlist.carpark.carparkAvailability = availability.carpark_info;\n        }\n      })\n    });\n  }\n}\n","import { initializeApp } from \"firebase/app\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\n\nconst firebaseConfig = {\n  apiKey: \"\",\n  authDomain: \"nearest-parking-58a90.firebaseapp.com\",\n  projectId: \"nearest-parking-58a90\",\n  storageBucket: \"nearest-parking-58a90.appspot.com\",\n  messagingSenderId: \"543236969803\",\n  appId: \"1:543236969803:web:73756cbeadc9e65c4a44ce\",\n  measurementId: \"G-P6E5LH4QY0\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst functions = getFunctions(app);\nconst getNearestCarparks = httpsCallable(functions, 'getNearestCarparks');\n\nexport default getNearestCarparks;\n","import \"./App.css\";\nimport PlacesAutocomplete from \"./components/PlacesAutocomplete\";\nimport DistanceMatrixWrapper from \"./components/DistanceMatrixWrapper\";\nimport ParkingPeriod from \"./components/ParkingPeriod\";\nimport ParkingTimeOffset from \"./components/ParkingTimeOffset\";\nimport ParkingList from \"./components/ParkingList\";\nimport React from \"react\";\nimport { CarparkAvailability } from \"./lib/CarparkAvailability\";\nimport getNearestCarparks from \"./lib/NearestFirebase\";\n\nclass App extends React.Component {\n  state = {\n    position: null,\n    distance: null,\n    offsetOverride: false,\n    calculateDistance: false,\n    originLat: 0,\n    originLng: 0,\n    destinationAddr: \"\",\n    destinationLat: 0,\n    destinationLng: 0,\n    destinationSearchRadius: 1,\n    timeToDestination: 0,\n    parkingPeriod: 0.5,\n    shortlists: []\n  };\n\n  componentDidMount = () => {\n    this.carparkAvailability = new CarparkAvailability(() => { this.showLoading(false) });\n    navigator.geolocation.getCurrentPosition(\n      this.onPositionSuccess,\n      this.onPositionError,\n      {\n        enableHighAccuracy: false,\n        timeout: 5000,\n        maximumAge: 5000\n      }\n    );\n  }\n\n  onPositionSuccess = (position) => {\n    const originLat = position.coords.latitude;\n    const originLng = position.coords.longitude;\n    this.setState({ position, originLat, originLng });\n  }\n\n  onPositionError = (error) => {\n    // TODO: improvement on how to warn customers\n  }\n\n  refreshCarparkShortlist = () => {\n    if (this.state.destinationAddr === \"\") return;\n    this.showLoading(true);\n    const oLat = (this.state.originLat === 0) ? this.state.destinationLat : this.state.originLat;\n    const oLng = (this.state.originLng === 0) ? this.state.destinationLng : this.state.originLng;\n    getNearestCarparks({\n      oLat: oLat,\n      oLng: oLng,\n      dLat: this.state.destinationLat,\n      dLng: this.state.destinationLng,\n      timeToDest: this.state.timeToDestination,\n      parkPeriod: this.state.parkingPeriod,\n      destRadius: this.state.destinationSearchRadius,\n    }).then((result) => {\n      const shortlists = result.data;\n      this.carparkAvailability.populateAvailability(shortlists);\n      this.setState({ shortlists: shortlists }, () => {\n        //console.log(this.state);\n        this.showLoading(false);\n      });\n    });\n  }\n\n  showLoading = (isLoading) => {\n    const display = (isLoading) ? \"flex\" : \"none\";\n    document.getElementById(\"overlay\").style.display = display;\n  }\n\n  onSelectDestination = (destinationData) => {\n    this.setState({ offsetOverride: false, calculateDistance: true });\n    this.setState(destinationData, this.refreshCarparkShortlist);\n  }\n\n  onChangeParkingPeriod = (parkingPeriod) => {\n    this.setState({ parkingPeriod: parkingPeriod }, this.refreshCarparkShortlist);\n  }\n\n  onChangeOffset = (event) => {\n    this.setState({ offsetOverride: true, timeToDestination: event.target.value }, this.refreshCarparkShortlist);\n  }\n\n  onChangeDMDistance = (distance) => {\n    this.setState({ distance: distance });\n  }\n\n  onChangeDMOffset = (offset) => {\n    if (this.state.offsetOverride === true) return; // NOTE: when will offset be override\n    this.setState({ timeToDestination: offset, calculateDistance: false });\n  }\n\n  render() {\n    return (\n      <main>\n        <div id=\"overlay\" style={{ display: \"flex\", }}>\n          <div className=\"w-100 d-flex justify-content-center align-items-center\">\n            <div className=\"spinner\"></div>\n          </div>\n        </div>\n        <div className=\"container-fluid bg-secondary pt-4 pb-2 px-0 mx-0\">\n          <div className=\"container\">\n            <div className=\"text-start text-md-center text-light pt-3 pb-3\">\n              <h1><span className=\"fw-bold fs-1\">Nearest</span> parking</h1>\n            </div>\n            <PlacesAutocomplete\n              inputs={this.state}\n              onSelectDestination={this.onSelectDestination} />\n            <DistanceMatrixWrapper\n              inputs={this.state}\n              onChangeDMDistance={this.onChangeDMDistance}\n              onChangeDMOffset={this.onChangeDMOffset} />\n          </div>\n        </div>\n        <div className=\"container-fluid p-0 m-0\">\n          <div className=\"container-lg py-2\">\n            <ParkingTimeOffset\n              destinationAddr={this.state.destinationAddr}\n              offset={this.state.timeToDestination}\n              onChangeOffset={this.onChangeOffset} />\n            <ParkingPeriod\n              destinationAddr={this.state.destinationAddr}\n              onChangeParkingPeriod={this.onChangeParkingPeriod} />\n          </div>\n          <ParkingList shortlists={this.state.shortlists} />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}